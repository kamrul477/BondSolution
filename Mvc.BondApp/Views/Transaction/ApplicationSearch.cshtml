@using System.Web.Mvc.Ajax
@using System.Xml.Schema
@model Mvc.BondApp.ViewModels.InstallmentPaymentViewModel
@using GridMvc.Html


@{
    ViewBag.Title = "ApplicationSearch";
}
@using (Html.BeginForm("", "Transaction", FormMethod.Post, new { @class = "form-horizontal", @id = "transactionForm" }))
{

    <div class="h1 text-center">Installment Payment</div>
    <div class="panel panel-info">
        <div class="panel-heading text-center">
            <h4>Installment Payment</h4>
        </div>
        <div class="panel-body text-center">
            <div class="">
                <fieldset class="bg-success">
                    <legend class="text-danger">General Information</legend>
                    <div class="row">
                        <div class="col-md-6">
                            @*APPLICATION NO*@
                            <div class="form-group">
                                @Html.Label("Application No", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Bondapplication.BONDSCN, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*FULL NAME*@
                            <div class="form-group">
                                @Html.Label("Name", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Bondapplication.BUYFNAME, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*LOCAL ADDRESS*@
                            <div class="form-group">
                                @Html.Label("Local Address", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Bondapplication.LOCALADDR, new { htmlAttributes = new { @class = "form-control col-md-12", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*FOREIGN ADDRESS*@
                            <div class="form-group">
                                @Html.Label("Foreign Address", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Bondapplication.ABOARDADDR, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            @*PASSPORT NO*@
                            <div class="form-group">
                                @Html.Label("Passport No", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">

                                    @Html.EditorFor(model => model.Bondapplication.PASSPORTNO, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*BENEFICIARY NAME*@
                            <div class="form-group">
                                @Html.Label("Beneficiary Name", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">

                                    @Html.EditorFor(model => model.Bondapplication.BENEFICIARY.BENFNAME, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*BENEFICIARY ADDRESS*@
                            <div class="form-group">
                                @Html.Label("Beneficiary Address", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">

                                    @Html.EditorFor(model => model.Bondapplication.BENEFICIARY.BENADDR, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            @*TOTAL NO OF BOND*@
                            <div class="form-group">
                                @Html.Label("Total No Of Bond", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Bondapplication.TOTALSCRIPT, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.TotalBondInstallmentTransaction } })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @*PAYABLE NO OF BOND*@
                            <div class="form-group">
                                @Html.Label("Payable No Of Bond", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.Editor("payableNoOfBond", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.payNoOfBondTransaction } })
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="row squeezeThird">
                        <div class="col-md-3">
                            @*APP DATE*@
                            <div class="form-group">
                                @Html.Label("App Date", htmlAttributes: new { @class = "control-label  col-md-5" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.Bondapplication.SCNDATE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @*TOTAL AMOUNT IN APP*@
                            <div class="form-group">
                                @Html.Label("Total Amount In App", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-7">
                                    <div class="col-md-8">
                                        @Html.Editor("TotalAmountInApp",
                                new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.TotalAmountTransaction } })
                                    </div>
                                    <div class="col-md-4">
                                        @Html.Editor("currencyCode", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.CurrencyName } })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            @*APP DATE*@
                            <div class="form-group">
                                @Html.Label("Paid Up Interest", htmlAttributes: new { @class = "control-label  col-md-6" })
                                <div class="col-md-6">
                                    @Html.Editor("paidUpInterest", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.PaidUpInterestTransaction } })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row squeezeRow">
                        <div class="col-md-4">
                            @*ACCOUNT NO*@
                            <div class="form-group">
                                @Html.Label("Account No", htmlAttributes: new { @class = "control-label  col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("AccountNo", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.AccNoTransaction } })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            @*LAST TRANSACTION*@
                            <div class="form-group">
                                @Html.Label("Last Transation", htmlAttributes: new { @class = "control-label  col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("lastTransaction", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.LastTransactionDate } })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            @*TOTAL AMT FOR THIS HOLDER*@
                            <div class="form-group">
                                @Html.Label("Total Amt For This Holder", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("totalAmountForThisHolder", new { htmlAttributes = new { @class = "form-control text-danger", @readonly = "readonly", @Value = ViewBag.TotalBondValue } })
                                </div>
                            </div>
                        </div>

                    </div>




                </fieldset>



                <hr />
                <fieldset class="bg-success">
                    <legend class="text-danger">Payment Information</legend>

                    <div class="row">
                        <div class="col-md-4">
                            @*PAYMENT MODE*@
                            <div class="form-group">
                                @Html.Label("Payment Mode", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.DropDownList("paymentMode",
                                    new SelectList(ViewBag.PaymentMode, "PAYCODE", "PAYDESC"), "Select Bond Mode", new { @class = "form-control", required = "Required" })
                                </div>
                            </div>
                            @*TOTAL AMT FOR THIS HOLDER*@
                            <div class="form-group">
                                @Html.Label("Transaction Date", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("transDate", new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            @*TOTAL AMT FOR THIS HOLDER*@
                            <div class="form-group">
                                @Html.Label("Installment No", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">

                                    @Html.DropDownList("installmentNo",
                                new SelectList(String.Empty, "id", "text"), "", new { @class = "form-control installmentNo" })

                                </div>
                            </div>
                            @*TOTAL AMT FOR THIS HOLDER*@
                            <div class="form-group">
                                @Html.Label("Serial", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @{
                                        var serialList = Model.Bondapplication.APPSCRIPTs.Where(o => o.BONDSTATUS.Equals("02")).Select(o => new { id = o.BONDSL, text = o.BONDSL });
                                        @Html.DropDownList("serial", new SelectList(serialList, "id", "text"), "", new { @class = "form-control serial" })

                                    }
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-8 col-md-offset-4 text-uppercase text-primary" id="bondDetailsText">

                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-3 col-md-10">
                                    @* ========================AJAX CALLS TO SUBMIT============================================== *@
                                    @Ajax.ActionLink(
                                    linkText: "Submit",
                                    actionName: "SubmitButton",
                                    routeValues: new { },
                                    ajaxOptions: new AjaxOptions()
                                    {
                                        HttpMethod = "GET",
                                        InsertionMode = InsertionMode.Replace,
                                        UpdateTargetId = "replaceDivForGrid",
                                        OnComplete = ""
                                    },
                                    htmlAttributes: new { @class = "btn btn-danger btn-sm" }
                                    )


                                    <input type="submit" value="Submit" class="btn btn-danger btn-sm" />
                                    <input type="button" value="Submit All" onclick=" FormResetFunction() " class="btn btn-danger btn-sm" />
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            @*payment in currency*@
                            <div class="form-group">
                                @Html.Label("Payment in Currency", htmlAttributes: new { @class = "control-label col-md-7" })
                                <div class="col-md-5">
                                    @Html.Editor("paymentInCurrency", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.CurrencyCode } })
                                </div>
                            </div>
                            @*exchange rate*@
                            <div class="form-group">
                                @Html.Label("Exchange Rate", htmlAttributes: new { @class = "control-label col-md-7" })
                                <div class="col-md-5">
                                    @Html.Editor("exchangeRate", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*TOTAL AMT FOR THIS HOLDER*@
                            <div class="form-group">
                                @Html.Label("Last Installment No", htmlAttributes: new { @class = "control-label col-md-7" })
                                <div class="col-md-5">
                                    @Html.Editor("lastInstallmentNo", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*TOTAL AMT FOR THIS HOLDER*@
                            <div class="form-group">
                                @Html.Label("Total Amt For This Holder", htmlAttributes: new { @class = "control-label col-md-7" })
                                <div class="col-md-5">
                                    @Html.Editor("totalAmountForThisHolder", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.TotalBondValue } })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-5">
                            @*Bank Code*@
                            <div class="form-group">
                                @Html.Label("Bank Name", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-6">
                                    @Html.DropDownList("bankName",
                                new SelectList(String.Empty, "bankCode", "bankName"), "===Select bank====", new { @class = "form-control bankName" })

                                </div>
                            </div>
                            @*branch name*@
                            <div class="form-group">
                                @Html.Label("Branch Name", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-6">
                                    @Html.DropDownList("branchName",
                                new SelectList(String.Empty, "branchCode", "branchName"), "===Select Branch====", new { @class = "form-control branchName" })
                                </div>
                            </div>
                            @*acc type*@
                            <div class="form-group">
                                @Html.Label("A/C Type", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-6">
                                    @Html.DropDownList("accType",
                                        new SelectList(new[]
                                        {
                                            new { Value = "S", Text = "Savings A/C" },
                                            new { Value = "C", Text = "Current A/C" },
                                            new { Value = "L", Text = "Loan A/C" },
                                        }, "Value", "Text", "2"), "Select A/C Type", new { @class = "form-control accType" })
                                </div>
                            </div>
                            @*Acc No*@
                            <div class="form-group">
                                @Html.Label("A/C No", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-6">
                                    @Html.Editor("accNo", new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                            </div>
                            @*VOUCHER*@
                            <div class="form-group">
                                @Html.Label("Voucher", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-6">
                                    @Html.DropDownList("voucher",
                                    new SelectList(ViewBag.Voucher, "VCODE", "VDESC"), "Select Voucher", new { @class = "form-control", required = "Required" })
                                </div>
                            </div>
                            @*DEBIT AMOUNT*@
                            <div class="form-group">
                                @Html.Label("Debit Amount", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-6">
                                    @Html.Editor("debitAmount", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>

                        </div>
                    </div>


                </fieldset>

                <hr />
                <div class="row">
                    <div class="col-md-5 bg-warning text-center">
                        <div id="replaceDivForGrid">
                            @Html.Partial("_GridDisplay", Model.Bondapplication.APPSCRIPTs)
                        </div>
                        <hr />
                    </div>
                    <div class="col-md-6 bg-success">
                        <div class="form-group">
                            @Html.Label("Claim Amount", htmlAttributes: new {@class = "control-label col-md-5"})
                            <div class="col-md-7">
                                @Html.Editor("claimAmount", new {htmlAttributes = new {@class = "form-control text-danger", @readonly = "readonly", @Value = ViewBag.TotalBondValue}})
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Social Security", htmlAttributes: new {@class = "control-label col-md-5"})
                            <div class="col-md-7">
                                @Html.Editor("socialSecurity", new {htmlAttributes = new {@class = "form-control text-danger", @readonly = "readonly", @Value = ViewBag.TotalBondValue}})
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Source Tax", htmlAttributes: new {@class = "control-label col-md-5"})
                            <div class="col-md-7">
                                @Html.Editor("sourceTax", new {htmlAttributes = new {@class = "form-control text-danger", @readonly = "readonly", @Value = ViewBag.TotalBondValue}})
                            </div>
                        </div>
                        <hr/><hr/>
                        <div class="form-group">
                            @Html.Label("Total Bond", htmlAttributes: new {@class = "control-label col-md-5"})
                            <div class="col-md-7">
                                @Html.Editor("totalBond", new {htmlAttributes = new {@class = "form-control text-danger", @readonly = "readonly", @Value = ViewBag.TotalBondValue}})
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Calcul. Interest", htmlAttributes: new {@class = "control-label col-md-5"})
                            <div class="col-md-7">
                                @Html.Editor("calculInterest", new {htmlAttributes = new {@class = "form-control text-danger", @readonly = "readonly", @Value = ViewBag.TotalBondValue}})
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.Label("Net Payment", htmlAttributes: new {@class = "control-label col-md-5"})
                            <div class="col-md-7">
                                @Html.Editor("netPayment", new {htmlAttributes = new {@class = "form-control text-danger", @readonly = "readonly", @Value = ViewBag.TotalBondValue}})
                            </div>
                        </div>



                    </div>
                </div>
            </div>

        </div>
    </div>







                                        }



<script>
    $("#paymentMode").change(function () {
        $(".accType").select2();
        $("#bankName").empty();
        if ($("#paymentMode").val() === "5" || $("#paymentMode").val() === "6") {

            $.ajax({
                type: "GET",
                url: '/Transaction/GetBankName',
                dataType: "json",
                //data: { selectedMode: $("#paymentMode").val() },
                success: function (items) {
                    $.each(items, function (i, item) {
                        $("#bankName").append("<option value=\"" + item.bankCode + "\">" + item.bankName + "</option>");
                    });
                    $("#bankName").attr("disabled", true);
                },
                error: function (ex) {
                    alert("Failed to retrieve bank name." + ex);
                }
            });
        } else {
            $("#bankName").attr("disabled", false);
            $(".bankName").select2({

                ajax: {
                    type: "GET",
                    url: "/Transaction/GetBankList",
                    dataType: "json",
                    delay: 250,
                    data: function (params) {
                        return {
                            q: params.term
                        };
                    },
                    processResults: function (data) {

                        return { results: data };
                    }
                },
                minimumResultsForSearch: 15,
                minimumInputLength: 4


            });
        }
    });


    $("#bankName").change(function () {

        $(".branchName").select2({

            ajax: {
                type: "GET",
                url: "/Transaction/GetBranchList",
                dataType: "json",
                delay: 250,
                data: function (params) {
                    return {
                        q: params.term, bankCode: $("#bankName").val()
                    };
                },
                //data: { q: $("#bankName").val() },
                processResults: function (data) {

                    return { results: data };
                }
            },

            minimumResultsForSearch: -1,
            minimumInputLength: 4


        });

    });

    $("#voucher").select2();

    $("#transDate").datepicker({
        //changeMonth: true,
        //changeYear: true,
        //dateFormat:'dd-mm-yy'

    });

    $("#transDate").change(function () {

        $(".installmentNo").select2({
            minimumResultsForSearch: 20, // at least 20 results must be displayed
            ajax: {
                type: "GET",
                url: "/Transaction/GetInstallmentNoList",
                dataType: "json",
                delay: 250,
                data: function (params) {
                    return {
                        q: params.term,
                        bondScn: $("#Bondapplication_BONDSCN").val(),
                        trnDate: $("#transDate").val(),
                        scanDate: $("#Bondapplication_SCNDATE").val()
                    };
                },
                processResults: function (data) {

                    return { results: data };
                }
            }
            //minimumInputLength: 1
        });

        $.ajax({
            type: "GET",
            url: '/Transaction/GetExchangeRate',
            dataType: "json",
            data: { tranDate: $("#transDate").val(), currCode: $("#paymentInCurrency").val() },
            success: function (item) {
                $("#exchangeRate").val(item);
                $("#exchangeRate").html(item);
            },
            error: function (ex) {
                alert("Failed to retrieve bank name." + ex);
            }
        });

    });

    $("#installmentNo").change(function () {
        $(".serial").select2();
    });

    $("#serial").change(function () {
        $("#bondDetailsText").empty();
        if ($("#installmentNo").val() != null) {
            $.ajax({
                type: "GET",
                url: '/Transaction/GetBondSpecific',
                dataType: "json",
                data: { serialNo: $("#serial").val(), applicationNo: $("#Bondapplication_BONDSCN").val() },
                success: function (item) {
                    $("#bondDetailsText").append("<label>" + item.prefix + "---" + item.bondNo + "---" + item.bondValue + "</label>");
                    $("#lastInstallmentNo").val(item.lastInstallmentNo);


                },
                error: function (ex) {
                    alert("Failed to retrieve bond." + ex);
                }
            });
         
        }

    });

     //$.ajax({
     //                   type: "GET",
     //                   url: '/Transaction/GetLastInstallmentNo',
     //                   dataType: "json",
     //                   data: { pBondScn: $("#Bondapplication_BONDSCN").val(), pBondCode:item.bondCode, pBondNo: item.bondNo  },
     //                   success: function (item) {
     //                       $("#lastInstallmentNo").html(item)
     //                   },
     //                   error: function (ex) {
     //                       alert("Failed to retrieve bond." + ex);
     //                   }
     //               });







</script>


