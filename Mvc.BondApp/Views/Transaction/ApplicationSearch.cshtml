@using System.Xml.Schema
@model Mvc.BondApp.ViewModels.InstallmentPaymentViewModel
@using GridMvc.Html


@{
    ViewBag.Title = "ApplicationSearch";
}
@using (Html.BeginForm("", "Transaction", FormMethod.Post, new { @class = "form-horizontal", @id = "transactionForm" }))
{

    <div class="h1 text-center">Installment Payment</div>
    <div class="panel panel-info">
        <div class="panel-heading text-center">
            <h4>Installment Payment</h4>
        </div>
        <div class="panel-body text-center">
            <div class="">
                <fieldset class="bg-success">
                    <legend class="text-danger">General Information</legend>
                    <div class="row">
                        <div class="col-md-6">
                            @*APPLICATION NO*@
                            <div class="form-group">
                                @Html.Label("Application No", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Bondapplication.BONDSCN, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*FULL NAME*@
                            <div class="form-group">
                                @Html.Label("Name", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Bondapplication.BUYFNAME, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*LOCAL ADDRESS*@
                            <div class="form-group">
                                @Html.Label("Local Address", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Bondapplication.LOCALADDR, new { htmlAttributes = new { @class = "form-control col-md-12", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*FOREIGN ADDRESS*@
                            <div class="form-group">
                                @Html.Label("Foreign Address", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Bondapplication.ABOARDADDR, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            @*PASSPORT NO*@
                            <div class="form-group">
                                @Html.Label("Passport No", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">

                                    @Html.EditorFor(model => model.Bondapplication.PASSPORTNO, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*BENEFICIARY NAME*@
                            <div class="form-group">
                                @Html.Label("Beneficiary Name", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">

                                    @Html.EditorFor(model => model.Bondapplication.BENEFICIARY.BENFNAME, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*BENEFICIARY ADDRESS*@
                            <div class="form-group">
                                @Html.Label("Beneficiary Address", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">

                                    @Html.EditorFor(model => model.Bondapplication.BENEFICIARY.BENADDR, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            @*TOTAL NO OF BOND*@
                            <div class="form-group">
                                @Html.Label("Total No Of Bond", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Bondapplication.TOTALSCRIPT, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.TotalBondInstallmentTransaction } })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @*PAYABLE NO OF BOND*@
                            <div class="form-group">
                                @Html.Label("Payable No Of Bond", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.Editor("payableNoOfBond", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.payNoOfBondTransaction } })
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="row squeezeThird">
                        <div class="col-md-3">
                            @*APP DATE*@
                            <div class="form-group">
                                @Html.Label("App Date", htmlAttributes: new { @class = "control-label  col-md-5" })
                                <div class="col-md-7">
                                    @Html.EditorFor(model => model.Bondapplication.SCNDATE, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @*TOTAL AMOUNT IN APP*@
                            <div class="form-group">
                                @Html.Label("Total Amount In App", htmlAttributes: new { @class = "control-label  col-md-4" })
                                <div class="col-md-7">
                                    <div class="col-md-8">
                                        @Html.Editor("TotalAmountInApp",
                                new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.TotalAmountTransaction } })
                                    </div>
                                    <div class="col-md-4">
                                        @Html.Editor("currencyCode", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.CurrencyName } })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            @*APP DATE*@
                            <div class="form-group">
                                @Html.Label("Paid Up Interest", htmlAttributes: new { @class = "control-label  col-md-6" })
                                <div class="col-md-6">
                                    @Html.Editor("paidUpInterest", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.PaidUpInterestTransaction } })
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row squeezeRow">
                        <div class="col-md-4">
                            @*ACCOUNT NO*@
                            <div class="form-group">
                                @Html.Label("Account No", htmlAttributes: new { @class = "control-label  col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("AccountNo", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.AccNoTransaction } })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            @*LAST TRANSACTION*@
                            <div class="form-group">
                                @Html.Label("Last Transation", htmlAttributes: new { @class = "control-label  col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("lastTransaction", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.LastTransactionDate } })
                                </div>
                            </div>
                        </div>
                        <div class="col-md-4">
                            @*TOTAL AMT FOR THIS HOLDER*@
                            <div class="form-group">
                                @Html.Label("Total Amt For This Holder", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("totalAmountForThisHolder", new { htmlAttributes = new { @class = "form-control text-danger", @readonly = "readonly", @Value = ViewBag.TotalBondValue } })
                                </div>
                            </div>
                        </div>

                    </div>




                </fieldset>



                <hr />
                <fieldset class="bg-success">
                    <legend class="text-danger">Payment Information</legend>

                    <div class="row">
                        <div class="col-md-4">
                            @*PAYMENT MODE*@
                            <div class="form-group">
                                @Html.Label("Payment Mode", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.DropDownList("paymentMode",
                                    new SelectList(ViewBag.PaymentMode, "PAYCODE", "PAYDESC"), "Select Bond Mode", new { @class = "form-control", required = "Required" })
                                </div>
                            </div>
                            @*TOTAL AMT FOR THIS HOLDER*@
                            <div class="form-group">
                                @Html.Label("Transaction Date", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("transDate", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.TotalBondValue } })
                                </div>
                            </div>
                            @*TOTAL AMT FOR THIS HOLDER*@
                            <div class="form-group">
                                @Html.Label("Installment No", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("installmentNo", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.TotalBondValue } })
                                </div>
                            </div>
                            @*TOTAL AMT FOR THIS HOLDER*@
                            <div class="form-group">
                                @Html.Label("Serial", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("serial", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.TotalBondValue } })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-3">
                            @*payment in currency*@
                            <div class="form-group">
                                @Html.Label("Payment in Currency", htmlAttributes: new { @class = "control-label col-md-7" })
                                <div class="col-md-5">
                                    @Html.Editor("paymentInCurrency", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.TotalBondValue } })
                                </div>
                            </div>
                            @*exchange rate*@
                            <div class="form-group">
                                @Html.Label("Exchange Rate", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("exchangeRate", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.TotalBondValue } })
                                </div>
                            </div>
                            @*TOTAL AMT FOR THIS HOLDER*@
                            <div class="form-group">
                                @Html.Label("Total Amt For This Holder", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("totalAmountForThisHolder", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.TotalBondValue } })
                                </div>
                            </div>
                            @*TOTAL AMT FOR THIS HOLDER*@
                            <div class="form-group">
                                @Html.Label("Total Amt For This Holder", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("totalAmountForThisHolder", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Value = ViewBag.TotalBondValue } })
                                </div>
                            </div>
                        </div>

                        <div class="col-md-4">
                            @*Bank Code*@
                            <div class="form-group">
                                @Html.Label("Bank Name", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.DropDownList("bankName",
                                new SelectList(String.Empty, "bankCode", "bankName"), "===Select bank====", new { @class = "form-control bankName" })

                                </div>
                            </div>
                            @*branch name*@
                            <div class="form-group">
                                @Html.Label("Branch Name", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.DropDownList("branchName",
                                new SelectList(String.Empty, "branchCode", "branchName"), "===Select Branch====", new { @class = "form-control branchName" })
                                </div>
                            </div>
                            @*acc type*@
                            <div class="form-group">
                                @Html.Label("A/C Type", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("accType", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*Acc No*@
                            <div class="form-group">
                                @Html.Label("A/C No", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("accNo", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", } })
                                </div>
                            </div>
                            @*VOUCHER*@
                            <div class="form-group">
                                @Html.Label("Voucher", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("voucher", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                            @*DEBIT AMOUNT*@
                            <div class="form-group">
                                @Html.Label("Debit Amount", htmlAttributes: new { @class = "control-label col-md-5" })
                                <div class="col-md-7">
                                    @Html.Editor("debitAmount", new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>
                    </div>


                </fieldset>

                <hr />
                <div class="row">
                    <div class="col-md-6 bg-warning text-center">
                        <fieldset>
                            <legend>Selection Grid</legend>
                            @Html.Grid(Model.Bondapplication.APPSCRIPTs.Where(o => o.BONDSTATUS.Equals("02"))).Columns(column =>
                    {
                        column.Add(o => o.BONDSL).Titled("Sl No");
                        column.Add(o => o.BONDPREFIX).Titled("Prefix");
                        column.Add(o => o.BONDNO).Titled("Bond No");
                        column.Add(o => o.BONDVALUE).Titled("Bond Value");
                    }).WithPaging(10).Sortable(false)

                        </fieldset>
                        <hr />

                    </div>
                    <div class="col-md-6"></div>
                </div>
            </div>

        </div>
    </div>







}



<script>
    $("#paymentMode").change(function () {
        $("#bankName").empty();
        if ($("#paymentMode").val() === "5" || $("#paymentMode").val() === "6") {

            $.ajax({
                type: "GET",
                url: '/Transaction/GetBankName',
                dataType: "json",
                //data: { selectedMode: $("#paymentMode").val() },
                success: function (items) {
                    $.each(items, function (i, item) {
                        $("#bankName").append("<option value=\"" + item.bankCode + "\">" + item.bankName + "</option>");
                    });
                },
                error: function (ex) {
                    alert("Failed to retrieve bank name." + ex);
                }
            });


        } else {
            $(".bankName").select2({

                ajax: {
                    type: "GET",
                    url: "/Transaction/GetBankList",
                    dataType: "json",
                    delay: 250,
                    data: function (params) {
                        return {
                            q: params.term
                        };
                    },
                    processResults: function (data) {
                        data = data.map(function (item) {
                            return {
                                bankCode: item.bankCode,
                                bankName: item.bankName

                            };
                        });
                        return { results: data };
                    }

                },
                minimumResultsForSearch: 15,
                minimumInputLength: 4,

            });
        }
    });

    $("#bankName").change(function () {

        $("#branchName").val("").trigger("change");

        $.ajax({
            type: "GET",
            //url: '@Url.Action("GetBranchList")',
            url: '/Transaction/GetBranchList',
            dataType: "json",
            data: { bankCode: $("#bankName").val() },
            success: function (scriptDenos) {
                $.each(scriptDenos, function (i, item) {
                    $("#branchName").val(item.branchCode);
                    $("#branchName").text(item.branchName);
                });
            },
            error: function (ex) {
                alert("Failed to retrieve states." + ex);
            }
        });

    });


</script>





@*$.ajax({
        type: "GET",
        // url: '@Url.Action("GetBankList")',
        url: '/Transaction/GetBankList',
        dataType: "json",
        // data: { selectedMode: $("#paymentMode").val() },
        success: function (bankNames) {
            $.each(bankNames, function (i, item) {
                $("#bankName").append("<option value=\"" + item.bankCode + "\">" + item.bankName + "</option>");
            });

        },
        error: function (ex) {
            alert("Failed to retrieve states." + ex);
        }
    });*@