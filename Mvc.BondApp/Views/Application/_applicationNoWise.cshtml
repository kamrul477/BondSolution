@model Mvc.BondApp.BONDAPPLICATION

@using (Html.BeginForm("StatusChangePromped", "Application", FormMethod.Get, htmlAttributes: new {@class = "form-horizontal"}))
{
    @Html.AntiForgeryToken()
    <div id="statusViewPlaceHolder col-md-12">
        <div class="col-md-6">
            <div class="form-group">
                @Html.Label("Bond App No", htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.BONDSCN, new {htmlAttributes = new {@class = "form-control col-md-4", @readonly = "readonly", @placeholder = "Bond app no"}})
                    @Html.ValidationMessageFor(model => model.BUYFNAME, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Application Name", htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.BUYFNAME, new {htmlAttributes = new {@class = "form-control col-md-4", @readonly = "readonly"}})
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Application Date", htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.SCNDATE, new {htmlAttributes = new {@class = "form-control col-md-4", @readonly = "readonly"}})
                    @Html.ValidationMessageFor(model => model.BUYFNAME, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Current Status", htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.STATUSCODE, new {htmlAttributes = new {@class = "form-control col-md-4", @readonly = "readonly"}})
                    @Html.ValidationMessageFor(model => model.BUYFNAME, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Local Address", htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.LOCALADDR, new {htmlAttributes = new {@class = "form-control col-md-4", @readonly = "readonly"}})
                    @Html.ValidationMessageFor(model => model.BUYFNAME, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>


        <div class="col-md-6">
            <div class="form-group">
                @Html.Label("Date Of Birth", htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DOB, new {htmlAttributes = new {@class = "form-control col-md-4", @readonly = "readonly"}})
                    @Html.ValidationMessageFor(model => model.BUYFNAME, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Passport", htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PASSPORTNO, new {htmlAttributes = new {@class = "form-control col-md-4", @readonly = "readonly"}})
                    @Html.ValidationMessageFor(model => model.BUYFNAME, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Issue Date", htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.PASSISSUEDATE, new {htmlAttributes = new {@class = "form-control col-md-4", @readonly = "readonly"}})
                    @Html.ValidationMessageFor(model => model.BUYFNAME, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Issue Place", htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-8">
                    @Html.EditorFor(model => model.ISSUEPLACE, new {htmlAttributes = new {@class = "form-control col-md-4", @readonly = "readonly"}})
                    @Html.ValidationMessageFor(model => model.BUYFNAME, "", new {@class = "text-danger"})
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Change Status", htmlAttributes: new {@class = "control-label col-md-4"})
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.STATUSCODE,
                        new SelectList(ViewBag.Status, "STATUSCODE", "STATUSDESC"), "===Select Status====", new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.BUYFNAME, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
        <hr/>
         <div class="form-group">
        <div class="">
            <button type="submit" class="btn btn-danger" aria-label="Left Align">
                <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>
                Save
            </button>
            @*<button type="button" class="btn btn-danger" aria-label="Left Align" onclick="StatusFormResetFunction()" value="Reset form">
                <span class="glyphicon glyphicon-repeat" aria-hidden="true"></span>
                Re-Set Form
            </button>*@
        </div>
    </div>




    </div>
}
<script>
            //=====================================GETTING THE BRANCH INFO IN FIELD FCBRANCH============================================
        $.ajax({
            type: "GET",
            url: '@Url.Action("GetStatus")',
            dataType: "json",
            data: { statusCode: $("#STATUSCODE").val(),issuePlace: $("#ISSUEPLACE").val() },
            success: function (status) {
                $("#STATUSCODE").val(status);
            },
            error: function (ex) {
                alert("Failed to retrieve states." + ex);
            }

        });
           $.ajax({
            type: "GET",
            url: '@Url.Action("GetPlace")',
            dataType: "json",
            data: { issuePlace: $("#ISSUEPLACE").val() },
            success: function (place) {
                $("#ISSUEPLACE").val(place);
            },
            error: function (ex) {
                alert("Failed to retrieve states." + ex);
            }

        });
        //=======================================================================================================================



</script>